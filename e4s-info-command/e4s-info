#!/usr/bin/sh
#~./bashrc

############################################################
# help                                                     #
############################################################
help()
{
	# Display Help
	echo "Usage: e4s-info [OPTION]... [INDEX]"
	echo "Print information about the E4S Software"
	echo
	echo "Options:"
	echo "  why		Choose an entry from the datafile containing information about why E4S was created"
	echo "  what		Choose an entry from the datafile containing information about what E4S is"
	echo "  who		Choose an entry from the datafile containing information about who created E4S"
	echo "  where		Choose an entry from the datafile containing information about where E4S was created"
	echo "  how		Choose an entry from the datafile containing information about how E4S was created"
	echo
	echo "Indexes:"
	echo "  -#		Use after an option to specify a specific entry in a specific datafile"
	echo
	echo "Exit Status:"
	echo " 0  if okay"
	echo " 1  if invalid option is provided"
	echo " 2  if datafile cannot be found"
	echo
}

############################################################
############################################################
# Main program                                             #
############################################################
############################################################

# Chose Datafile
FILECHOICE=""
FILEPREFIX="$( dirname -- "$( readlink -f -- "$0"; )"; )"
if [ $# -eq 0 ]
then
	# Chose datafile at random
	NUMBER="$(awk 'BEGIN { srand(); print int(rand()*32768) }' /dev/null)"
	FILENUM=$((NUMBER%5 ))

	if [ $FILENUM -eq 0 ]
	then
		FILECHOICE="$FILEPREFIX/e4s-data/e4s-info-why.data"
	elif [ $FILENUM -eq 1 ]
	then
		FILECHOICE="$FILEPREFIX/e4s-data/e4s-info-who.data"
	elif [ $FILENUM -eq 2 ]
        then
                FILECHOICE="$FILEPREFIX/e4s-data/e4s-info-what.data"
	elif [ $FILENUM -eq 3 ]
        then
                FILECHOICE="$FILEPREFIX/e4s-data/e4s-info-where.data"
	else
		FILECHOICE="$FILEPREFIX/e4s-data/e4s-info-how.data"
	fi

elif  [ "$1" = "why" ] || [ "$1" = "what" ] || [ "$1" = "who" ] || [ "$1" = "where" ] || [ "$1" = "how" ] && [ $# -lt 3 ]
then
	# Chose specified datafile
	for val in "$FILEPREFIX" '/e4s-data/e4s-info-' $1 '.data'
	do
		FILECHOICE=${FILECHOICE}"$val"
	done

elif [ $# -eq 1 ] && [ "$1" = "--help" ]
then
	help
	exit 0
else
	echo "e4s-info: invalid option -- '$*'"
	echo "Try 'e4s-info --help' for more information"
	exit 1
fi

# Check if File Exists
if ! [ -f "$FILECHOICE" ]
then
	echo "Error: datafile not found"
	exit 2
fi

# Find Total Entries in Datafile
TOTAL=0
while IFS= read -r LINE
do
	if [ "$(printf "%s" "$LINE" | cut -c 1)" = "%" ]
	then
		TOTAL=$((TOTAL+1))
	fi
done < "$FILECHOICE"

# Chose Index
INDEX=-1
if [ $# -lt 2 ]
then
	NUMBER="$(awk 'BEGIN { srand(); print int(rand()*32768) }' /dev/null)"
	INDEX=$((NUMBER%TOTAL))

elif [ "$2" != "--" ]
then
        SECONDPARAM=$2
	INDEXLENGTH=${#SECONDPARAM}
        LENGTH=$(expr "$2" : "-[0-9]*")
	NEGTOTAL=$((0-TOTAL))
        if [ "$INDEXLENGTH" -eq "$LENGTH" ] && [ "$LENGTH" -gt 1 ] && [ "$SECONDPARAM" -gt "$NEGTOTAL" ]
        then
                INDEX=$((0-$2))

        else
                echo "e4s-info: invalid option -- '$*'"
                echo "Try 'e4s-info --help' for more information"
                exit 1

        fi
else
        echo "e4s-info: invalid option -- '$*'"
        echo "Try 'e4s-info --help' for more information"
        exit 1

fi

# Print Entry at INDEX
COUNT=0
while IFS= read -r LINE
do
        FIRSTCHAR="$(printf "%s" "$LINE" | cut -c 1)"

	if [ "$FIRSTCHAR" = "%" ]
	then
		COUNT=$((COUNT+1))
		if [ $COUNT -gt $INDEX ]
		then
			exit
		fi

	elif [ $COUNT -eq $INDEX ]
	then
		echo "$LINE"
	fi
done < "$FILECHOICE"

