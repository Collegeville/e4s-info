#!/usr/bin/sh
#~./bashrc

argError()
{
	echo
	echo "Invalid arguments -- \"$ARGS\""
	echo "Please use \"e4s-info -h\" or \"e4s-info --help\" to display more information"
	echo
	exit 1
}

helpMessage()
{
	echo "Usage: e4s-info [OPTION]... [INDEX]"
	echo "Print information about the E4S Software"
	echo
	echo "Options:"
	echo "  why		Choose an entry from the datafile containing information about why E4S was created"
	echo "  what		Choose an entry from the datafile containing information about what E4S is"
	echo "  who		Choose an entry from the datafile containing information about who created E4S"
	echo "  where		Choose an entry from the datafile containing information about where E4S was created"
	echo "  how		Choose an entry from the datafile containing information about how E4S was created"
	echo
	echo "Indexes:"
	echo "  -#		Use after an option to specify a specific entry in a specific datafile"
	echo
	echo "Exit Status:"
	echo " 0  if okay"
	echo " 1  if invalid option is provided"
	echo " 2  if datafile cannot be found"
	echo
	exit 0
}

ARGS=$*
FILECHOICE=""
FILEPREFIX="$( dirname -- "$( readlink -f -- "$0"; )"; )"
DATATYPE=
INDEX=

if [ $# -eq 0 ]; then
	NUMBER="$(awk 'BEGIN { srand(); print int(rand()*32768) }' /dev/null)"
        FILENUM=$((NUMBER%5 ))

        if [ $FILENUM -eq 0 ]; then
                DATATYPE="why"
        elif [ $FILENUM -eq 1 ]; then
                DATATYPE="who"
        elif [ $FILENUM -eq 2 ]; then
                DATATYPE="what"
        elif [ $FILENUM -eq 3 ]; then
                DATATYPE="where"
        else
                DATATYPE="how"
        fi
fi

while [ "$1" != "" ] && [ $# -lt 3 ]; do
    case $1 in
    who)
        DATATYPE="$1"
	shift
	[ -z "$1" ] || INDEX=$1
	;;
    what)
        DATATYPE="$1"
        shift
        [ -z "$1" ] || INDEX=$1
	;;
    where)
        DATATYPE="$1"
        shift
        [ -z "$1" ] || INDEX=$1
	;;
    why)
        DATATYPE="$1"
        shift
        [ -z "$1" ] || INDEX=$1
	;;
    how)
        DATATYPE="$1"
        shift
        [ -z "$1" ] || INDEX=$1
	;;
    -h | --help)
        helpMessage
        ;;
    *)
        argError
        ;;
    esac
    shift
done

# Find datafile
for val in "$FILEPREFIX" '/e4s-data/e4s-info-' $DATATYPE '.data'
do
	FILECHOICE=${FILECHOICE}"$val"
done

# Check if File Exists
if ! [ -f "$FILECHOICE" ]
then
	echo "Error: datafile not found"
	exit 2
fi

# Find Total Entries in Datafile
TOTAL=0
while IFS= read -r LINE
do
	if [ "$(printf "%s" "$LINE" | cut -c 1)" = "%" ]
	then
		TOTAL=$((TOTAL+1))
	fi
done < "$FILECHOICE"

# Chose Index
if [ -z "$INDEX" ]
then
	NUMBER="$(awk 'BEGIN { srand(); print int(rand()*32768) }' /dev/null)"
	INDEX=$((NUMBER%TOTAL))

else
        INDEXLENGTH=${#INDEX}
        LENGTH=$(expr "$INDEX" : "-[0-9]*")
	NEGTOTAL=$((0-TOTAL))
        if [ "$INDEXLENGTH" -eq "$LENGTH" ] && [ "$LENGTH" -gt 1 ] && [ "$INDEX" -gt "$NEGTOTAL" ]
        then
                INDEX=$((0-INDEX))

        else
                argError
        fi
fi

# Print Entry at INDEX
COUNT=0
while IFS= read -r LINE
do
        FIRSTCHAR="$(printf "%s" "$LINE" | cut -c 1)"

	if [ "$FIRSTCHAR" = "%" ]
	then
		COUNT=$((COUNT+1))
		if [ $COUNT -gt $INDEX ]
		then
			exit
		fi

	elif [ $COUNT -eq $INDEX ]
	then
		echo "$LINE"
	fi
done < "$FILECHOICE"

